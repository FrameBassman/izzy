# trigger:
# - master
trigger: 
  branches:
    include:
    - '*'

stages:
  - stage: Build_Release
    displayName: Just CI
    jobs:
    - job: Release
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - bash: echo Hi!!!!!!!!!!!
      displayName: Just push

      # - bash: |
      #     curl -sL https://sentry.io/get-cli/ | bash
      #     sentry-cli releases new -p $SENTRY_PROJECT $SENTRY_RELEASE
      #     sentry-cli releases set-commits $SENTRY_RELEASE --auto
      #   displayName: Create release and notify Sentry of deploy
      #   env:
      #     SENTRY_AUTH_TOKEN: $(Sentry.Auth.Token)
      #     SENTRY_RELEASE: $(Build.BuildNumber)

  #     - task: Docker@2
  #       displayName: Login to Docker Hub
  #       inputs:
  #         command: login
  #         containerRegistry: hub.docker.com

  #     - task: Docker@2
  #       displayName: Build and Push
  #       inputs:
  #         command: buildAndPush
  #         repository: framebassman/izzy
  #         tags: $(Build.BuildNumber)

  # - stage: Deploy
  #   displayName: Deploy Docker images to Production environment
  #   jobs:
  #     - deployment: CD
  #       displayName: Deploy to production
  #       environment:
  #         name:  Production
  #         resourceType: VirtualMachine
  #         tags: web
  #       strategy:
  #         runOnce:
  #           deploy:
  #             steps:
  #               - checkout: self
  #                 clean: false
  #               - bash: docker stop izzy
  #                 displayName: Stop previous version
  #               - bash: |
  #                   docker-compose \
  #                   --project-directory=${PWD} \
  #                   --project-name=romashov.tech \
  #                   -f Deploy/docker-compose.deploy.yml \
  #                   build
  #                 displayName: Start new version

  # - stage: Post_Deploy
  #   displayName: Post deploy steps
  #   jobs:
  #   - job: Release
  #     pool:
  #       vmImage: 'ubuntu-latest'
  #     continueOnError: false
  #     steps:
  #     - bash: |
  #         curl -sL https://sentry.io/get-cli/ | bash
  #         sentry-cli releases finalize $SENTRY_RELEASE
  #         sentry-cli releases deploys $SENTRY_RELEASE new -e $SENTRY_ENVIRONMENT
  #       displayName: Finish Sentry deployment
  #       env:
  #         SENTRY_AUTH_TOKEN: $(Sentry.Auth.Token)
  #         SENTRY_RELEASE: $(Build.BuildNumber)